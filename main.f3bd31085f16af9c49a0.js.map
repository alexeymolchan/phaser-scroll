{"version":3,"sources":["webpack:///./src/index.css?d8c3","webpack:///./src/assets/troika.otf","webpack:///./src/utils/index.js","webpack:///./src/ui/ProgressBar.js","webpack:///./src/ui/ScrollView.js","webpack:///./src/scenes/RootScene.js","webpack:///./src/index.js","webpack:///./src/utils/fontLoader.js","webpack:///./src/index.css","webpack:///./src/assets/row-dark.png","webpack:///./src/assets/row-grey.png"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","update","locals","exports","hot","accept","newContent","a","b","key","idx","Error","dispose","p","getPercentageFromSide","percentage","side","flatten","arr","reduce","acc","next","concat","apply","_toConsumableArray","ui_ScrollView","ScrollView","scene","x","y","width","height","_this","ScrollView_classCallCheck","this","ScrollView_defineProperty","ScrollView_assertThisInitialized","ScrollView_possibleConstructorReturn","ScrollView_getPrototypeOf","call","centerX","centerY","setSize","setPosition","initialY","inputZone","input","hitArea","setInteractive","draggable","positionAndScaleRows","data","maskShape","fillRect","setMask","phaser_default","Display","Masks","GeometryMask","clear","setup","childHeight","getAt","displayHeight","childMargin","setY","childs","rowHeight","rowWidth","textFont","forEach","child","index","yPos","positionX","nameX","gameObject","name","setScale","displayWidth","setFontSize","add","isLoading","scroll","iterationScroll","zone","make","graphics","existing","on","_ref","downY","prevDragY","_ref2","dragY","scrollHeight","length","nextY","GameObjects","Container","game","listData","Array","from","map","position","user","experience","Math","floor","random","scenes_RootScene","RootScene","RootScene_classCallCheck","RootScene_defineProperty","RootScene_assertThisInitialized","RootScene_possibleConstructorReturn","RootScene_getPrototypeOf","cameras","resize","window","innerWidth","innerHeight","scrollView","fps","list","item","backgroundName","rowBackground","image","setName","pos","text","fontFamily","color","fontStyle","setShadow","setOrigin","pointsValue","points","push","Scene","load","row_dark_default","row_grey_default","listItems","generateListItems","setData","events","resizeHandler","time","delta","setText","config","type","WEBGL","autoResize","backgroundColor","resolution","devicePixelRatio","gameResizeHadler","Promise","resolve","webfontloader_default","classes","custom","families","active","then","Game","addEventListener","f","ms","timer","_len","arguments","args","_key","clearTimeout","setTimeout","debounce","catch","error","console","escape"],"mappings":"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","file":"main.f3bd31085f16af9c49a0.js","sourcesContent":["\nvar content = require(\"!!../node_modules/css-loader/index.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = __webpack_public_path__ + \"assets/troika14a045.otf\";","export const debounce = (f, ms) => {\n  let timer = null;\n  \n  return (...args) => {\n    const onComplete = () => {\n      f.apply(this, args);\n      timer = null;\n    };\n    \n    if (timer) {\n      clearTimeout(timer);\n    }\n    \n    timer = setTimeout(onComplete, ms);\n  };\n};\n\nexport const getPercentageFromSide = (percentage, side) => (side * percentage) / 100;\n\nexport const flatten = arr => arr.reduce((acc, next) => acc.concat(...next), []);","import Phaser from 'phaser';\n\nexport const progressBarStyles = {\n  borderColor: 0x005e09,\n  shadowColor: '#005e09',\n  progressColor: 0xc0ff38,\n  progressShadowColor: 0x27b78d,\n};\n\nclass ProgressBar extends Phaser.GameObjects.Container {\n  constructor(scene, minValue = 0, currentValue = 100, maxValue = 100, width, height, isTextCentered = false) {\n    super(scene);\n    this.scene = scene;\n    this.minValue = minValue;\n    this.currentValue = currentValue;\n    this.maxValue = maxValue;\n    this.updateTween = null;\n    this.isTextCentered = isTextCentered;\n    this.root = this.scene.make.graphics();\n    this.progress = this.scene.make.graphics();\n    this.text = this.scene.make.text({style: {fontFamily: 'troika', color: '#ffffff', fontStyle: 'bold'}});\n    this.text\n      .setOrigin(1, 0.5)\n      .setShadow(2.8, 2.8, progressBarStyles.shadowColor, false, true)\n      .setScale(0.5);\n    const textValue = `${currentValue}/${maxValue} XP`;\n    this.text.setText(textValue);\n    this.boot(false, width, height);\n    this.add([this.root, this.progress, this.text]);\n    this.scene.add.existing(this);\n  }\n  \n  boot = (isResize = false, width, height) => {\n    if (this.updateTween) {\n      this.updateTween.pause();\n    }\n    \n    const containerWidth = width || window.innerWidth * 0.3;\n    const containerHeight = height || containerWidth * 0.11;\n    this.setSize(containerWidth, containerHeight);\n    this.innerWidth = this.width - this.height * 0.09;\n    this.innerHeight = this.height - this.height * 0.09;\n    this.createRoot(isResize);\n    this.createProgress(isResize);\n    this.setupTextStyles();\n    \n    if (this.updateTween) {\n      this.updateTween.resume();\n    }\n  };\n  \n  createRoot = (withClear = false) => {\n    if (withClear) {\n      this.root.clear();\n    }\n    const offset = this.height * 0.045;\n    const radius = this.height * 0.1;\n    const halfPI = Math.PI * 0.5;\n    const minusHalfPI = halfPI * -1;\n    this.root.fillStyle(0x000000, 0.3);\n    this.root.fillRect(offset, offset, this.innerWidth, this.innerHeight);\n    this.root.beginPath();\n    this.root.lineStyle(this.height * 0.09, progressBarStyles.borderColor, 1);\n    this.root.moveTo(radius, 0);\n    this.root.lineTo(this.width - radius, 0);\n    this.root.moveTo(this.width - radius, 0);\n    this.root.arc(this.width - radius, radius, radius, minusHalfPI, 0);\n    this.root.lineTo(this.width, this.height - radius);\n    this.root.moveTo(this.width, this.height - radius);\n    this.root.arc(this.width - radius, this.height - radius, radius, 0, halfPI);\n    this.root.lineTo(radius, this.height);\n    this.root.moveTo(radius, this.height);\n    this.root.arc(radius, this.height - radius, radius, halfPI, Math.PI);\n    this.root.lineTo(0, radius);\n    this.root.moveTo(0, radius);\n    this.root.arc(radius, radius, radius, -Math.PI, minusHalfPI);\n    this.root.closePath();\n    this.root.strokePath();\n  };\n  \n  createProgress = (withClear = false) => {\n    if (withClear) {\n      this.progress.clear();\n    }\n    const valuesAspect = this.getValuesAspect();\n    if (valuesAspect === 0) {\n      return;\n    }\n    const borderBaseRadius = this.innerHeight * 0.09;\n    const borders = {\n      tl: borderBaseRadius,\n      bl: borderBaseRadius,\n      br: valuesAspect < 1 ? 0 : borderBaseRadius,\n      tr: valuesAspect < 1 ? 0 : borderBaseRadius\n    };\n    \n    const offset = this.height * 0.045;\n    const shadowOffset = this.innerHeight * 0.076;\n    this.progress.fillStyle(progressBarStyles.progressShadowColor, 1);\n    this.progress.fillRoundedRect(offset, offset, this.innerWidth * valuesAspect, this.innerHeight, borders);\n    this.progress.fillStyle(progressBarStyles.progressColor, 1);\n    this.progress.fillRoundedRect(\n      offset,\n      offset,\n      this.innerWidth * valuesAspect,\n      this.innerHeight - shadowOffset,\n      borders\n    );\n  };\n  \n  setupTextStyles = () => {\n    const textFontPercentage = this.isTextCentered ? 0.5 : 0.65;\n    this.text.setFontSize(this.height * textFontPercentage * 2);\n    this.text.setPosition(\n      this.isTextCentered ? this.width / 2 + this.text.displayWidth / 2 : this.width - 10,\n      this.height / 2\n    );\n  };\n  \n  resize = (width, height) => {\n    this.boot(true, width, height);\n  };\n  \n  getValuesAspect = () => (this.currentValue - this.minValue) / (this.maxValue - this.minValue);\n  \n  updateProgress = (nextValue, completeCallback, delay = 0) => {\n    if (this.updateTween) {\n      this.updateTween.stop();\n    }\n    if (nextValue >= 0) {\n      this.updateTween = this.scene.add.tween({\n        targets: this,\n        currentValue: nextValue <= this.maxValue ? nextValue : this.maxValue,\n        onUpdate: tween => {\n          const nextCalculatedValue = tween.data[0].current;\n          const textValue = `${Math.round(nextCalculatedValue)}/${this.maxValue} XP`;\n          this.text.setText(textValue);\n          this.createProgress(true);\n        },\n        onComplete: () => {\n          this.updateTween = null;\n          if (completeCallback) {\n            completeCallback();\n          }\n        },\n        duration: 200,\n        ease: 'Linear',\n        delay\n      });\n    }\n  };\n  \n  reset = (min, current, max) => {\n    const textValue = `${Math.round(current)}/${max} XP`;\n    this.text.setText(textValue);\n    this.currentValue = current;\n    this.maxValue = max;\n    this.minValue = min;\n    this.createProgress(true);\n  };\n}\n\nexport default ProgressBar;\n","import Phaser from 'phaser';\nimport { getPercentageFromSide, flatten } from '../utils';\n\nclass ScrollView extends Phaser.GameObjects.Container {\n  constructor(scene, x, y, width, height) {\n    super(scene, 0, 0);\n    this.isLoading = true;\n    this.scene = scene;\n    this.scroll = 0;\n    this.iterationScroll = 0;\n    this.data = [];\n    this.inputZone = this.scene.add.zone();\n    this.inputZone.setInteractive({ draggable: true });\n    this.maskShape = this.scene.make.graphics();\n    this.setup(width, height, x, y);\n    this.childHeight = (this.getAt(0) && this.getAt(0).displayHeight) || 0;\n    this.childMargin = this.height * 0.003;\n    this.scene.add.existing(this);\n    \n    this.inputZone.on('dragstart', ({ downY }) => {\n      this.prevDragY = downY;\n    });\n    \n    this.inputZone.on('drag', ({ y: dragY, downY }) => {\n      const scrollHeight =\n        this.data.length * (this.childHeight + this.childMargin) -\n        this.height;\n      if (scrollHeight < 0) {\n        return;\n      }\n      \n      const nextY = this.y + dragY - this.prevDragY;\n      \n      if (this.initialY - nextY >= scrollHeight && dragY - this.prevDragY < 0) {\n        this.setY(this.initialY - scrollHeight);\n        this.prevDragY = dragY;\n        return;\n      }\n      \n      if (nextY >= this.initialY && dragY - this.prevDragY > 0) {\n        this.setY(this.initialY);\n        this.prevDragY = dragY;\n        return;\n      }\n      \n      this.setY(nextY);\n      this.prevDragY = dragY;\n    });\n  }\n  \n  setup = (width, height, x, y) => {\n    const centerX = x + width / 2;\n    const centerY = y + height / 2;\n    this.setSize(width, height);\n    this.setPosition(centerX, centerY);\n    this.initialY = y + height / 2;\n    this.inputZone.setSize(width, height);\n    this.inputZone.setPosition(x, y);\n    if (!this.inputZone.input) {\n      this.inputZone.setInteractive({ draggable: true });\n    } else {\n      this.inputZone.input.hitArea.setSize(width, height);\n    }\n    \n    this.positionAndScaleRows(this.data);\n    \n    this.maskShape.fillRect(this.x - this.width / 2, this.y - this.height / 2, this.width, this.height);\n    this.setMask(new Phaser.Display.Masks.GeometryMask(this.scene, this.maskShape));\n  };\n  \n  resize = (width, height, x, y) => {\n    this.maskShape.clear();\n    this.setup(width, height, x, y);\n    this.childHeight = (this.getAt(0) && this.getAt(0).displayHeight) || 0;\n    this.childMargin = this.height * 0.003;\n  };\n  \n  resetScroll = () => {\n    this.setY(this.initialY);\n  };\n  \n  positionAndScaleRows = childs => {\n    let rowHeight;\n    let rowWidth;\n    let textFont;\n    \n    childs.forEach((child, index) => {\n      let yPos;\n      let positionX;\n      let rankX;\n      let nameX;\n      let nameWidth;\n      child.forEach(gameObject => {\n        switch (gameObject.name) {\n          case 'background':\n            gameObject.setScale(this.width / gameObject.width);\n            if (!yPos) {\n              yPos =\n                -this.height / 2 +\n                gameObject.displayHeight / 2 +\n                index * (gameObject.displayHeight + this.height * 0.003);\n            }\n            gameObject.setPosition(0, yPos);\n            if (!rowWidth && !rowHeight && !textFont) {\n              rowHeight = gameObject.displayHeight;\n              rowWidth = gameObject.displayWidth;\n              textFont = rowHeight * 0.41 * 2;\n            }\n            break;\n          case 'position':\n            if (!positionX) {\n              positionX = getPercentageFromSide(rowWidth, 3.5) - this.width / 2;\n            }\n            gameObject.setFontSize(textFont).setPosition(positionX, yPos);\n            break;\n          case 'name':\n            gameObject.setFontSize(textFont);\n            if (!nameX) {\n              nameX = positionX + getPercentageFromSide(rowWidth, 10);\n              nameWidth = gameObject.displayWidth;\n            }\n            gameObject.setPosition(nameX, yPos);\n            break;\n          \n          case 'points':\n            gameObject.setFontSize(textFont).setPosition(this.width / 2 - getPercentageFromSide(rowWidth, 4.5), yPos);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  };\n  \n  setData = (data) => {\n    this.data = data;\n    this.positionAndScaleRows(data);\n    this.add(flatten(this.data));\n    this.childHeight = this.getAt(0).displayHeight;\n  };\n}\n\nexport default ScrollView;\n","import Phaser from 'phaser';\nimport ProgressBar from '../ui/ProgressBar';\nimport rowDark from '../assets/row-dark.png';\nimport rowGrey from '../assets/row-grey.png';\nimport ScrollView from '../ui/ScrollView';\n\nconst listData = Array.from({length: 30}).map((a, i) => ({\n  position: i,\n  user: {\n    name: 'Phaser 3.11.0',\n    experience: Math.floor(Math.random() * 1000)\n  }\n}));\n\nclass RootScene extends Phaser.Scene {\n  constructor() {\n    super('rootScene');\n  }\n  \n  preload() {\n    this.load.image('row-dark', rowDark);\n    this.load.image('row-grey', rowGrey);\n  }\n  \n  create() {\n    const progressBarWidth = window.innerWidth / 4;\n    const progressBarHeight = 40;\n    // this.progressBar = new ProgressBar(this, 0, 333, 666, window.innerWidth / 4, 40, true);\n    // this.progressBar.setPosition(10, 50);\n    this.listItems = this.generateListItems(listData);\n    this.scrollView = new ScrollView(this, 10 + window.innerWidth / 4 + 50, 50, window.innerWidth * 0.4, window.innerHeight * 0.4);\n    this.scrollView.setData(this.listItems);\n    this.fps = this.add.text(20, 30, '', {fontFamily: 'troika', color: '#c9c9c9'});\n    this.fps.setFontSize(window.innerWidth * 0.03);\n    this.events.on('resize', this.resizeHandler);\n  }\n  \n  resizeHandler = () => {\n    this.cameras.resize(window.innerWidth, window.innerHeight);\n    const progressBarWidth = window.innerWidth / 4;\n    const progressBarHeight = 40;\n    // this.progressBar.resize(progressBarWidth, progressBarHeight);\n    this.scrollView.resize(window.innerWidth * 0.4, window.innerHeight * 0.4, 10 + window.innerWidth / 4 + 50, 50);\n    this.fps.setFontSize(window.innerWidth * 0.03);\n  };\n  \n  generateListItems = data => {\n    const list = [];\n    data.forEach((item, index) => {\n      let backgroundName = 'row-dark';\n      if (index % 2 === 0) {\n        backgroundName = 'row-grey';\n      }\n      const rowBackground = this.add.image(-window.innerWidth, 0, backgroundName);\n      rowBackground.setName('background');\n      const pos = `${item.position + 1}`;\n      const position = this.add.text(-window.innerWidth, 0, pos, {\n        fontFamily: 'troika',\n        color: '#8c8c8c',\n        fontStyle: 'bold'\n      });\n      position\n        .setShadow(2.8, 2.8, '#000000', 0)\n        .setName('position')\n        .setScale(0.5)\n        .setOrigin(0, 0.5);\n      const name = this.add.text(-window.innerWidth, 10, item.user.name, {\n        fontFamily: 'troika',\n        color: '#ffffff',\n        fontStyle: 'bold'\n      });\n      name\n        .setShadow(2.8, 2.8, '#000000', 0)\n        .setName('name')\n        .setScale(0.5)\n        .setOrigin(0, 0.5);\n      \n      const pointsValue = `${item.user.experience}`;\n      const points = this.add.text(-window.innerWidth, 0, pointsValue, {\n        fontFamily: 'troika',\n        color: '#ffef38',\n        fontStyle: 'bold'\n      });\n      points\n        .setShadow(2.8, 2.8, '#993200', 0)\n        .setName('points')\n        .setScale(0.5)\n        .setOrigin(1, 0.5);\n      \n      list.push([rowBackground, position, name, points]);\n    });\n    return list;\n  };\n  \n  update(time, delta) {\n    this.fps.setText(Math.floor(1 / delta * 1000))\n  }\n}\n\nexport default RootScene;","import Phaser from 'phaser';\nimport {debounce} from './utils';\nimport loadFont from './utils/fontLoader';\nimport RootScene from './scenes/RootScene';\n\nimport './index.css';\n\nconst config = {\n  type: Phaser.WEBGL,\n  width: window.innerWidth,\n  height: window.innerHeight,\n  autoResize: true,\n  backgroundColor: '#556B2F',\n  resolution: window.devicePixelRatio || 1,\n  scene: [\n    RootScene,\n  ]\n};\n\nlet game;\n\nconst gameResizeHadler = () => {\n  game.resize(window.innerWidth, window.innerHeight);\n};\n\nloadFont()\n  .then(() => {\n    game = new Phaser.Game(config);\n    \n    window.addEventListener('resize', debounce(gameResizeHadler, 500));\n  })\n  .catch(error => {\n    console.error(error);\n  });\n","import WebFont from 'webfontloader';\n\nexport default () =>\n  new Promise(resolve => {\n    WebFont.load({\n      classes: false,\n      custom: {\n        families: ['troika']\n      },\n      active: resolve\n    });\n  });\n","var escape = require(\"../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html {\\n  width: 100vw;\\n  height: 100vh;\\n  position: fixed;\\n  overflow: hidden;\\n  font-family: \\\"troika\\\", sans-serif;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  width: 100%;\\n  height: 100%;\\n  position: fixed;\\n  overflow: hidden;\\n}\\n\\ncanvas {\\n  width: 100%;\\n  height: 100%;\\n  cursor: crosshair;\\n  background-color: #36441f;\\n}\\n\\n@font-face {\\n  font-family: 'troika';\\n  font-style: normal;\\n  font-weight: normal;\\n  src: url(\" + escape(require(\"./assets/troika.otf\")) + \") format('opentype');\\n}\\n\", \"\"]);\n\n// exports\n","module.exports = __webpack_public_path__ + \"assets/row-dark621744.png\";","module.exports = __webpack_public_path__ + \"assets/row-greyc4c8fc.png\";"],"sourceRoot":""}